# ðŸ”„ Feature Flow: {feature_name}
# > Detailed feature flow specification for {feature_name} using Given-When-Then scenarios. Documents class interactions, method implementations, data flow, and test requirements in structured YAML format for behavior-driven development.

activity:
  name: [Activity Name]
  steps:
    - GIVEN: [Initial Context/State Description]
      classes:
        - name: [ClassName1]
          # Optional fields below - include only if relevant
          variables:
            - [variable_name]
            # Add more variables as needed
          methods:
            - name: [method_name]
              type: [void|async|Future<Type>|etc]
              # Optional fields below - include only if relevant
              inputs:
                - [parameter_name]
                # Add more parameters as needed
              logic:
                - [high-level step 1]
                - [high-level step 2]
                # Add more logic steps as needed
              tests:
                - [unit test description]
                # Add more test descriptions as needed
          chores:
            - [setup/external task description]
            # Add more chores as needed
        
        # Simple class reference (when no additional details needed)
        - name: [ClassName2]
    
    - WHEN: [Action Description]
      classes:
        - name: [ClassName]
          # Include relevant details as in the GIVEN step
    
    - THEN: [Expected Result Description]
      classes:
        - name: [ClassName]
          # Include relevant details as in the GIVEN step
    
    - AND: [Additional Result/Condition]
      classes:
        - name: [ClassName]
          # Include relevant details as in the GIVEN step

# Example:
# activity:
#   name: Add Fridge List Item Success
#   steps:
#     - GIVEN: User is at HomeView
#       classes:
#         - name: HomeView
#         - name: AddItemButton
#           methods:
#             - name: onPressed
#               type: void
#               logic:
#                 - calls HomeViewModel.onAddButtonPressed
#     - WHEN: User taps AddItemButton
#       classes:
#         - name: AddItemButton
#         - name: HomeView
#     - THEN: System adds Item
#       classes:
#         - name: HomeViewModel
#           chores:
#             - register at Locator dependency injection
#           methods:
#             - name: onAddButtonPressed
#               type: async
#               logic:
#                 - calls and awaits ItemService.addItem
#                 - handles response
#         - name: ItemService
#           variables:
#             - items
#           methods:
#             - name: addItem
#               type: async
#               inputs:
#                 - item
#               logic:
#                 - adds item to map
#                 - saves item to firestore
#               tests:
#                 - unit test whether item is added to map
#                 - do not test saving firestore
#     - AND: System shows ToastConfirmation
#       classes:
#         - name: ToastService
#           methods:
#             - name: showToast
#               type: void
#               inputs:
#                 - title
#                 - subtitle
#               logic:
#                 - shows toast